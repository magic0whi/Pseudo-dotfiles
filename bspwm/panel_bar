#! /bin/sh
#
# Example panel for lemonbar

. panel_colors

num_mon=$(bspc query -M | wc -l)

while read -r line ; do
	case $line in
		S*)
			# clock output
			sys="%{F$COLOR_SYS_FG}%{B$COLOR_SYS_BG} ${line#?} %{B-}%{F-}"
			;;
		T*)
			# xtitle output
			title="%{F$COLOR_TITLE_FG}%{B$COLOR_TITLE_BG} ${line#?} %{B-}%{F-}"
			;;
		W*)
			# bspwm's state
			wm=
			IFS=':'
            # 'set' don't use Internal Field Separator directly, the content in ${line} was passed already separated by bash
			set -- ${line#?}
			while [ $# -gt 0 ] ; do
				item=$1
				name=${item#?}
				case $item in
					[mM]*)
						case $item in
							m*)
								# monitor
								FG=$COLOR_MONITOR_FG
								BG=$COLOR_MONITOR_BG
								on_focused_monitor=
								;;
							M*)
								# focused monitor
								FG=$COLOR_FOCUSED_MONITOR_FG
								BG=$COLOR_FOCUSED_MONITOR_BG
								on_focused_monitor=1
								;;
						esac
						[ $num_mon -lt 2 ] && shift && continue
						wm="${wm}%{F${FG}}%{B${BG}}%{A:bspc monitor -f ${name}:} ${name} %{A}%{B-}%{F-}"
						;;
					[fFoOuU]*)
						case $item in
							f*)
								# free desktop
								FG=$COLOR_FREE_FG
								BG=$COLOR_FREE_BG
								UL=$BG
								;;
							F*)
								if [ "$on_focused_monitor" ] ; then
									# focused free desktop
									FG=$COLOR_FOCUSED_FREE_FG
									BG=$COLOR_FOCUSED_FREE_BG
									UL=$BG
								else
									# active free desktop
									FG=$COLOR_FREE_FG
									BG=$COLOR_FREE_BG
									UL=$COLOR_FOCUSED_FREE_BG
								fi
								;;
							o*)
								# occupied desktop
								FG=$COLOR_OCCUPIED_FG
								BG=$COLOR_OCCUPIED_BG
								UL=$BG
								;;
							O*)
								if [ "$on_focused_monitor" ] ; then
									# focused occupied desktop
									FG=$COLOR_FOCUSED_OCCUPIED_FG
									BG=$COLOR_FOCUSED_OCCUPIED_BG
									UL=$BG
								else
									# active occupied desktop
									FG=$COLOR_OCCUPIED_FG
									BG=$COLOR_OCCUPIED_BG
									UL=$COLOR_FOCUSED_OCCUPIED_BG
								fi
								;;
							u*)
								# urgent desktop
								FG=$COLOR_URGENT_FG
								BG=$COLOR_URGENT_BG
								UL=$BG
								;;
							U*)
								if [ "$on_focused_monitor" ] ; then
									# focused urgent desktop
									FG=$COLOR_FOCUSED_URGENT_FG
									BG=$COLOR_FOCUSED_URGENT_BG
									UL=$BG
								else
									# active urgent desktop
									FG=$COLOR_URGENT_FG
									BG=$COLOR_URGENT_BG
									UL=$COLOR_FOCUSED_URGENT_BG
								fi
								;;
						esac
						wm="${wm}%{F${FG}}%{B${BG}}%{U${UL}}%{+u}%{A:bspc desktop -f ${name}:} ${name} %{A}%{B-}%{F-}%{-u}"
						;;
					[LTG]*)
						# layout, state and flags
						wm="${wm}%{F$COLOR_STATE_FG}%{B$COLOR_STATE_BG} ${name} %{B-}%{F-}"
						;;
				esac
				shift
			done
			;;
	esac
    #Define the battery
    Battery() {
        declare -i BATPERC=$(acpi --battery | cut -d',' -f2 | sed 's/ //g;s/%//')
		BATICON='\uf244'
		if [ ${BATPERC} -ge 90 ];then
    	    BATICON='\uf240'
    	elif [ ${BATPERC} -ge 75 ];then
    	    BATICON='\uf241'
    	elif [ ${BATPERC} -ge 50 ];then
    	    BATICON='\uf242'
    	elif [ ${BATPERC} -ge 20 ];then
    	    BATICON='\uf243'
    	fi
        if [ $(acpi --battery | sed 's/Battery [0-9]: //' | cut -d, -f1) = 'Unknown' ];then
            PLUGICON='\uf1e6'
        elif [ $(acpi --battery | sed 's/Battery [0-9]: //' | cut -d, -f1) = 'Charging' ];then
            PLUGICON='\uf0e7'
        fi
        echo -e "${BATICON}${PLUGICON}${BATPERC}%"
    }
    Network() {
        if [[ $(iwctl station wlan0 show | awk '{if (NR == 6) print $2}') == 'connected' ]];then
            echo -e "\uf1eb$(iwctl station wlan0 show | awk '{if (NR == 7) print}' | sed 's/^\s*Connected network\s*//;s/\s*$//')"
        else
            echo -e "\uf127"
        fi
    }
    Volume() {
        declare -i VOLUME=$(amixer -D default sget Master,0 | awk '{if (NR == 6) print $5}' | sed 's/\[//;s/]//;s/%//')
        VOLUMEICON='\uf6a9'
        if [ ${VOLUME} -ge 75 ];then
            VOLUMEICON='\uf028'
        elif [ ${VOLUME} -ge 25 ];then
            VOLUMEICON='\uf027'
        elif [ ${VOLUME} -gt 0 ];then
            VOLUMEICON='\uf026'
        fi
        echo -e "${VOLUMEICON} ${VOLUME}%"
    }
    Coretemp() {
        # Package temp
        declare -i PKGTEMP="$(cat /sys/devices/platform/coretemp.0/hwmon/hwmon?/temp1_input)"
        TEMPICON='\uf2cb'
        if [ ${PKGTEMP::-3} -ge 85 ];then
            TEMPICON='\uf2c7'
        elif [ ${PKGTEMP::-3} -ge 75 ];then
            TEMPICON='\uf2c8'
        elif [ ${PKGTEMP::-3} -ge 65 ];then
            TEMPICON='\uf2c9'
        elif [ ${PKGTEMP::-3} -ge 55 ];then
            TEMPICON='\uf2ca'
        fi
        echo -e "${TEMPICON}${PKGTEMP::-3}\u00b0C"
    }

    Backlight() {
        Brightness=$(echo "scale = 2;$(cat /sys/class/backlight/intel_backlight/brightness)/$(cat /sys/class/backlight/intel_backlight/max_brightness)*100" | bc | cut -d. -f1)
        echo -e "\uf0eb${Brightness}%"
    }

    Power() {
        PowerConsumption=$(echo "scale=2; $(cat /sys/class/power_supply/BAT0/voltage_now)*$(cat /sys/class/power_supply/BAT0/current_now)/1000000000000" | bc)
        echo -e "\uf043${PowerConsumption}W"
    }

    printf "%s\n" "%{l}${wm}%{c}${title}%{r}$(Backlight) $(Coretemp) $(Volume) $(Network) $(Battery) $(Power) ${sys}"
done
